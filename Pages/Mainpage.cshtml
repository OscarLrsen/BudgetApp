@page
@model BudgetApp.Pages.MainpageModel
@{
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>BudgetWise</title>
    <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet">
    <style>
        /* Reset & Base Styles */
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            background: linear-gradient(to right, #e2e2e2, #c9d6ff);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            color: #333;
            line-height: 1.6;
            padding-bottom: 40px;
        }

        /* Navigation Bar */
        .navbar {
            width: 100%;
            background: #fff;
            padding: 0px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            text-align: center;
            font-size: 24px;
            font-weight: bold;
            position: relative;
            top: 0;
            z-index: 1000;
        }

        /* Main Container */
        .container {
            width: 90%;
            max-width: 1200px;
            margin: 40px auto;
            display: flex;
            justify-content: space-between;
            gap: 30px;
        }

        .budget-expense {
            display: flex;
            justify-content: space-between;
            width: 100%;
            gap: 20px;
        }

        .box {
            background: #fff;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            padding: 30px;
            flex: 1;
            max-width: 45%;
            min-width: 300px;
        }

        .summary {
            width: 70%;
            max-width: 600px;
            background: #4a6cf7;
            color: #fff;
            display: flex;
            justify-content: space-around;
            align-items: center;
            padding: 20px;
            border-radius: 10px;
            font-size: 18px;
            text-align: center;
            margin: 20px auto; /* Centrerar rutan med ett avstånd */
            height: 120px; /* Definiera en specifik höjd */

        }

        form h2 {
            margin-bottom: 20px;
            font-size: 22px;
            border-bottom: 2px solid #e2e2e2;
            padding-bottom: 10px;
        }

        form label {
            display: block;
            margin: 15px 0 5px;
            font-weight: bold;
        }

        form input[type="number"],
        form input[type="text"],
        form select {
            width: 100%;
            padding: 12px;
            border: 1px solid #ccc;
            border-radius: 5px;
            margin-bottom: 10px;
        }

        form button {
            width: 100%;
            padding: 12px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            margin-top: 10px;
        }

        .btn-primary {
            background-color: #007bff;
            color: #fff;
        }

        .btn-danger {
            background-color: #dc3545;
            color: #fff;
        }

        form button:hover {
            opacity: 0.9;
        }

        /* Expenses List */
        .expenses-list {
            width: 100%;
            background: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin: 20px auto;
        }

        .expense-row {
            display: flex;
            justify-content: space-between;
            padding: 10px 0;
            border-bottom: 1px solid #f2f2f2;
        }

            .expense-row.header {
                font-weight: bold;
                background-color: #f9f9f9;
            }

        .expense-category,
        .expense-amount,
        .expense-actions {
            width: 33%;
            text-align: left;
            padding: 10px;
        }

        .expense-actions {
            text-align: center;
        }

            .expense-actions i {
                cursor: pointer;
                font-size: 20px;
                transition: color 0.3s;
            }

                .expense-actions i:hover {
                    color: #dc3545;
                }

        .footer {
            text-align: center;
            padding: 10px;
            color: #777;
            margin-top: 40px;
            border: none;
            height: 120px; /* Definiera en specifik höjd */
        }

        .btn-logout {
            background-color: #dc3545; /* Röd färg */
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s;
        }

            .btn-logout:hover {
                background-color: #c82333; /* Mörkare röd vid hover */
            }

    </style>
</head>
<body>

    <div class="container">
        <!-- Budget Setup Form -->
        <div class="box">
            <form method="post" asp-page-handler="SetBudget">
                <h2>Budget</h2>
                <label for="budget">Budget</label>
                <input type="number" placeholder="Enter Budget" asp-for="Budget" id="budget" name="budget" required>
                <button type="submit" class="btn-primary">Set Budget</button>
            </form>
        </div>

        <div class="summary">
            <div>Total Budget: 10000</div>
            <div>Expenses: 4300</div>
            <div>Balance: 5700</div>
        </div>

        <div class="box">
            @if (Model.EditExpense != null && Model.EditExpense.Id > 0)
            {
                <!-- EDIT FORM -->
                <form method="post">
                    <h2>Edit Expense</h2>

                    <!-- Dold input för att hålla reda på vilken expense vi redigerar -->
                    <input type="hidden" asp-for="EditExpense.Id" />

                    <label for="editExpenseName">Expense Title</label>
                    <input type="text" asp-for="EditExpense.Name" placeholder="Enter Title Of Product" required>

                    <label for="editExpenseAmount">Amount</label>
                    <input type="number" asp-for="EditExpense.Amount" placeholder="Enter Cost Of Product" required>

                    <label for="editExpenseCategory">Category</label>
                    <select asp-for="EditExpense.CategoryId" required>
                        @foreach (var category in Model.Categories)
                        {
                            <option value="@category.Id">@category.Name</option>
                        }
                    </select>

                    <button type="submit" asp-page-handler="UpdateExpense" class="btn-primary">Update Expense</button>
                </form>
            }
            else
            {
                <!-- ADD FORM -->
                <form method="post">
                    <h2>Add Expense</h2>

                    <label for="expenseName">Expense Title</label>
                    <input type="text" id="expenseName" name="expenseName" placeholder="Enter Title Of Product" required>

                    <label for="expenseAmount">Amount</label>
                    <input type="number" id="expenseAmount" name="expenseAmount" placeholder="Enter Cost Of Product" required>

                    <label for="expenseCategory">Category</label>
                    <select id="expenseCategory" name="expenseCategory" required>
                        @foreach (var category in Model.Categories)
                        {
                            <option value="@category.Id">@category.Name</option>
                        }
                    </select>

                    <button type="submit" asp-page-handler="AddExpense" class="btn-primary">Add Expense</button>
                </form>
            }
        </div>

<<<<<<< HEAD
    <div class="expenses-list">
        <h2>Expenses List</h2>
        <div class="expense-row header">
            <div class="expense-category">Category</div>
            <div class="expense-amount">Amount</div>
            <div class="expense-actions">Actions</div>
        </div>

        <div class="expense-row">
            <div class="expense-category">Food</div>
            <div class="expense-amount">1000</div>
            <div class="expense-actions">
                <i class='bx bx-edit'></i>
                <i class='bx bx-trash'></i>
            </div>
        </div>

        <div class="expense-row">
            <div class="expense-category">Car</div>
            <div class="expense-amount">1500</div>
            <div class="expense-actions">
                <i class='bx bx-edit'></i>
                <i class='bx bx-trash'></i>
            </div>
        </div>

        <div class="expense-row">
            <div class="expense-category">Rent</div>
            <div class="expense-amount">600</div>
            <div class="expense-actions">
                <i class='bx bx-edit'></i>
                <i class='bx bx-trash'></i>
            </div>
        </div>

        <div class="expense-row">
            <div class="expense-category">Travel</div>
            <div class="expense-amount">1200</div>
            <div class="expense-actions">
                <i class='bx bx-edit'></i>
                <i class='bx bx-trash'></i>
            </div>
        </div>
    </div>

    <!-- Other content above -->

    <div class="footer">
        <button class="btn-logout">Log Out</button>
    </div>
=======

    <!-- Summary Section: Displays Budget, Total Expenses, and Calculated Balance -->
    <div class="summary">
        <div>Total Budget: @Model.Budget</div>
        <div>Expenses: @Model.TotalExpenses</div>
        <div>Balance: @(Model.Budget - Model.TotalExpenses)</div>
    </div>

    <!-- Expenses Table: Lists all expenses with their details -->
    <div class="expenses-list">
        <h2>Expenses List</h2>
        <table>
            <tr>
                <th>Name</th>
                <th>Category</th>
                <th>Amount</th>
                @* <th>Date</th> *@
                <th>Actions</th>
            </tr>
            @if (Model.Expenses != null && Model.Expenses.Count > 0)
            {
                @foreach (var expense in Model.Expenses)
                {
                    <tr>
                        <td>@expense.Name</td>
                        <td>@expense.Category.Name</td>
                        <td>@expense.Amount kr</td>
                        @* <td>@expense.Date.ToShortDateString()</td> *@
                        <td class="icons">
                            <a asp-page="/Mainpage" asp-page-handler="EditExpense" asp-route-expenseId="@expense.Id"> <!-- Edit knappen-->
                                <i class='bx bx-edit'></i>
                            </a>

                            <form method="post" asp-page-handler="DeleteExpense" asp-route-expenseId="@expense.Id" onsubmit="return confirm('Are you sure?');">
                                <button type="submit" class="btn-danger">
                                    <i class='bx bx-trash'></i>
                                </button>
                            </form>

                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="5">No expenses added yet.</td>
                </tr>
            }

        </table>
    </div>


        <!-- Pie Chart för Budget -->
        <div class="chart-container" style="width: 50%; margin: auto; padding-top: 40px;">
            <h2 style="text-align: center;">Budgetfördelning</h2>
            <canvas id="budgetChart"></canvas>
        </div>


        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script>
            document.addEventListener("DOMContentLoaded", async function () {
                console.log(" Pie Chart laddas...");

                // Hämta budgetdata från backend
                async function fetchBudgetData() {
                    try {
                        const response = await fetch('/api/budget');
                        if (!response.ok) {
                            throw new Error("Kunde inte hämta budgetdata");
                        }
                        return await response.json();
                    } catch (error) {
                        console.error(" Fel vid hämtning av budgetdata:", error);
                        return { budgetAmount: 0, totalExpenses: 0 };
                    }
                }

                // Skapa Pie Chart
                async function createChart() {
                    const data = await fetchBudgetData();

                    const totalBudget = data.budgetAmount;
                    const totalExpenses = data.totalExpenses;
                    const remainingBudget = totalBudget - totalExpenses;

                    const ctx = document.getElementById('budgetChart').getContext('2d');

                    new Chart(ctx, {
                        type: 'pie',
                        data: {
                    labels: ['Utgifter', 'Kvarvarande Budget'],
                    datasets: [{
                        data: [totalExpenses, remainingBudget],
                        backgroundColor: ['#ff6384', '#36a2eb'], //Ändra färg
                        borderColor: ['#ff3b60', '#2a82c8'], // Kantlinjefärg
                        borderWidth: 2
                    }]
                        },
                        options: {
                            responsive: true,
                            plugins: {
                                legend: { position: 'top' },
                                title: { display: true, text: 'Budgetfördelning' }
                            }
                        }
                    });

                    console.log("Pie Chart!");
                }

                createChart();
            });
        </script>
>>>>>>> e689cc8d7415c5f15a42130793946f2d01a9159b

</body>
</html>
